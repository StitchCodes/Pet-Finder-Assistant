[{"/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/index.js":"1","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/App.js":"2","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/reportWebVitals.js":"3","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/pages/Help.js":"4","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/pages/Main.js":"5","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/pages/SignupLogin.js":"6","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/pages/addPet.js":"7","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/pages/IndividualPlacard.js":"8","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/header/index.js":"9","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/footer/index.js":"10","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/utils/mutations.js":"11","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/utils/auth.js":"12","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/Checkout/index.js":"13","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/FilterForm/index.js":"14","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/PetPlacard/index.js":"15","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/CommentSection/index.js":"16","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/MapComponent/index.js":"17","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/EmailModal/index.js":"18","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/EmailForm/index.js":"19","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/IndividualComment/index.js":"20","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/DatePicker/index.js":"21","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/utils/queries.js":"22"},{"size":425,"mtime":1651960007584,"results":"23","hashOfConfig":"24"},{"size":1188,"mtime":1651960007573,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1651960007586,"results":"26","hashOfConfig":"24"},{"size":1593,"mtime":1652197860867,"results":"27","hashOfConfig":"24"},{"size":832,"mtime":1651960007585,"results":"28","hashOfConfig":"24"},{"size":5394,"mtime":1652197860869,"results":"29","hashOfConfig":"24"},{"size":5106,"mtime":1652197860870,"results":"30","hashOfConfig":"24"},{"size":3462,"mtime":1652217660306,"results":"31","hashOfConfig":"24"},{"size":2412,"mtime":1652197860867,"results":"32","hashOfConfig":"24"},{"size":512,"mtime":1651960007583,"results":"33","hashOfConfig":"24"},{"size":1781,"mtime":1651960007587,"results":"34","hashOfConfig":"24"},{"size":719,"mtime":1651960007586,"results":"35","hashOfConfig":"24"},{"size":1767,"mtime":1652197860866,"results":"36","hashOfConfig":"24"},{"size":1885,"mtime":1651960007581,"results":"37","hashOfConfig":"24"},{"size":2526,"mtime":1651960007582,"results":"38","hashOfConfig":"24"},{"size":1925,"mtime":1651960007581,"results":"39","hashOfConfig":"24"},{"size":701,"mtime":1651960007582,"results":"40","hashOfConfig":"24"},{"size":635,"mtime":1651960007581,"results":"41","hashOfConfig":"24"},{"size":933,"mtime":1651960007581,"results":"42","hashOfConfig":"24"},{"size":670,"mtime":1651960007582,"results":"43","hashOfConfig":"24"},{"size":471,"mtime":1652197860866,"results":"44","hashOfConfig":"24"},{"size":1714,"mtime":1651960007587,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"x4v796",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/index.js",[],["93","94"],"/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/App.js",[],"/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/reportWebVitals.js",[],"/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/pages/Help.js",[],"/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/pages/Main.js",[],"/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/pages/SignupLogin.js",["95","96","97","98","99"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN, NEWUSER } from '../utils/mutations';\nimport { Button, Form, Grid, GridColumn, Header, Image, Segment, Container} from \"semantic-ui-react\";\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: ''});\n  const [newFormState,setNewFormState] = useState({email:'', name:'', lastname:'', password: '', phone: ''});\n  const [login, {error, data}] = useMutation(LOGIN);\n  const [newUser, {error1, data1}] = useMutation(NEWUSER);\n\n\n  // Update form state on Input for Login\n  const handleChange = (event) => {\n    const {name, value} = event.target;\n  \n    setFormState({ ...formState, [name]: value});\n  };\n\n  // Submit Form function for Login\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    \n    try {\n      const {data} = await login({variables: { ...formState}});\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  // Update form state on Input for sing up\n  const signUpHandleChange = (event) => {\n    const {name, value} = event.target;\n  \n    setNewFormState({ ...newFormState, [name]: value});\n  };\n\n   // Submit Form function for sign up\n   const signupHandleFormSubmit = async (event) => {\n    event.preventDefault();\n    \n    try {\n      const {data} = await newUser({variables: { ...newFormState}});\n      console.log(data);\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n      <Container  style={{ marginTop: '8em' , \"margin-bottom\": '3rem' }}>\n      <Segment>\n        <Grid columns={2} relaxed=\"very\">\n          <GridColumn   verticalallign=\"middle\">\n            <Grid\n              textallign=\"center\"\n              style={{ height: \"75vh\" }}\n            >\n              {/* LOGIN TO YOUR ACCOUNT */}\n              <GridColumn style={{ maxWidth: 450 }}   verticalallign=\"middle\">\n                <Header as=\"h2\" color=\"teal\" textallign=\"center\">\n                  Log-in to your Account\n                </Header>\n    \n                <Form size=\"large\" onSubmit={handleFormSubmit}>\n                  <Segment stacked>\n                    <Form.Input\n                      fluid\n                      icon=\"user\"\n                      iconPosition=\"left\"\n                      placeholder=\"E-mail address\"\n                      name=\"email\"\n                      onChange={handleChange}\n                    />\n                    <Form.Input\n                      fluid\n                      icon=\"lock\"\n                      placeholder=\"Password\"\n                      type=\"password\"\n                      name=\"password\"\n                      onChange={handleChange}\n                    />\n                    <Button color=\"teal\" fluid size=\"large\">\n                      Log In\n                    </Button>\n                  </Segment>\n                </Form>\n              </GridColumn>\n            </Grid>\n          </GridColumn>\n          <GridColumn>\n            <Grid\n              textallign=\"center\"\n              style={{ height: \"75vh\" }}\n            >\n              {/* CREATE ACCOUNT */}\n              <GridColumn style={{ maxWidth: 450 }}   verticalallign=\"middle\">\n                <Header as=\"h2\" color=\"teal\" textallign=\"center\">\n                 Create your Account\n                </Header>\n    \n                <Form size=\"large\" onSubmit={signupHandleFormSubmit}>\n                  <Segment stacked>\n                    <Form.Input\n                      fluid\n                      icon=\"address book\"\n                      iconPosition=\"left\"\n                      name=\"name\"\n                      placeholder=\"First Name\"\n                      onChange={signUpHandleChange}\n                    />\n                    <Form.Input\n                      fluid\n                      icon=\"address book outline\"\n                      iconPosition=\"left\"\n                      name=\"lastname\"\n                      placeholder=\"Last Name\"\n                      onChange={signUpHandleChange}\n                    />\n                    <Form.Input\n                      fluid\n                      icon=\"user\"\n                      name=\"email\"\n                      iconPosition=\"left\"\n                      placeholder=\"E-mail address\"\n                      onChange={signUpHandleChange}\n                    />\n                    <Form.Input\n                      fluid\n                      icon=\"lock\"\n                      name=\"password\"\n                      iconPosition=\"left\"\n                      placeholder=\"Password\"\n                      type=\"password\"\n                      onChange={signUpHandleChange}\n                    />\n                    <Form.Input\n                      fluid\n                      icon=\"phone\"\n                      name=\"phone\"\n                      iconPosition=\"left\"\n                      placeholder=\"phone #\"\n                      onChange={signUpHandleChange}\n                    />\n                    <Button color=\"teal\" fluid size=\"large\">\n                      Sign In\n                    </Button>\n                  </Segment>\n                </Form>\n              </GridColumn>\n            </Grid>\n          </GridColumn>\n        </Grid>\n      </Segment>\n      </Container>)\n};\n\nexport default Login; ","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/pages/addPet.js",["100","101"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADDPLACARD } from '../utils/mutations';\nimport { Container, Form, Button, Segment, Grid, GridColumn, Image, Divider } from \"semantic-ui-react\";\nimport PetBackground from \"../assets/images/pets.png\";\nimport Auth from '../utils/auth';\nimport Datepicker from '../components/DatePicker';\n\nconst AddPetForm = () => {\n\n  const SpeciesOptions = [\n    { key: \"d\", text: \"Dog\", value: \"dog\" },\n    { key: \"c\", text: \"Cat\", value: \"cat\" },\n    { key: \"o\", text: \"Other\", value: \"other\" },\n  ];\n\n  const ColorOptions = [\n    { key: \"black\", text: \"Black\", value: \"black\" },\n    { key: \"brown\", text: \"Brown\", value: \"brown\" },\n    { key: \"cream\", text: \"Cream\", value: \"cream\" },\n    { key: \"ginger\", text: \"Ginger\", value: \"ginger\" },\n    { key: \"gray\", text: \"Gray\", value: \"gray\" },\n    { key: \"white\", text: \"White\", value: \"white\" },\n    { key: \"other\", text: \"Other\", value: \"other\" },\n  ];\n\n  const [formState, setFormState] = \n  useState({\n    petAuthor: '',\n    location: '', \n    petName: '', \n    petSpecies: '', \n    petGender: '', \n    petColor: '', \n    petDesc: '', \n    petDateLF: '', \n    petStatus: '', \n    petPhoto:'', \n    petReward: ''\n  });\n  const [validated] = useState(false);\n\n  const [ addPlacard ] = useMutation(ADDPLACARD);\n\n  // const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n  // if (!token) {\n  //   alert(\"need to be logged in to add a pet\");\n  //   return false;\n  // }\n  // const placardAuthorData = Auth.getUser().data._id;\n  // setFormState({...formState, placardAuthor: placardAuthorData});\n\n\n  // Update form state on Input for addPlacard\n  const handleChange = (event) => {\n    const {name, value} = event.target;\n   \n      // event.preventDefault();\n      // event.stopPropagation();\n\n    setFormState({ ...formState, [name]: value});\n  };\n  \n  \n  // Submit Form function for addPlacard\n  const handleFormSubmit = async (event) => {\n    try {\n      alert(\"click on the submit button\");\n      const {data} = await addPlacard({\n        variables: { ...formState}\n      });\n      if (!data) {\n        throw new Error('something went wrong!');\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n \n  return (\n    <Container style={{ marginTop: '8em', \"margin-bottom\": '6rem' }} >\n  <Segment >\n    <Grid columns={2} relaxed=\"very\">\n      <GridColumn verticalAlign='middle'>\n        <Image src={PetBackground} />\n      </GridColumn>\n\n      <Grid.Column>\n        <Form>\n          <Form.Group inline >\n              <label>Status</label>\n              <Form.Radio\n                label=\"Lost\"\n                name=\"petStatus\"\n                value=\"lost\"\n                onChange={handleChange}\n              />\n              <Form.Radio\n                label=\"Found\"\n                name=\"petStatus\"\n                value=\"found\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n\n            <Form.Field>\n              <Form.Input \n                fluid label=\"Name\" \n                placeholder=\"Name\" \n                name=\"name\" \n                //onChange={handleChange}\n                />\n            </Form.Field>\n\n            <Form.Select \n               fluid label=\"Species\" \n               options={SpeciesOptions} \n               placeholder=\"Select\" \n               name=\"petSpecies\" \n               //onChange={handleChange}\n             />\n\n          <Form.Group inline>\n            <label>Gender</label>\n            <Form.Radio\n              label=\"Male\"\n              name=\"petGender\"\n              value=\"male\"\n              onChange={handleChange}\n            />\n                \n            <Form.Radio\n              label=\"Female\"\n              name=\"petGender\"\n              value=\"female\"\n              onChange={handleChange}\n            />\n          </Form.Group>\n\n          <Form.Select \n               options={ColorOptions} \n               placeholder=\"Species\" \n               name=\"petColor\" \n               onChange={handleChange}\n          />\n\n          <Form.TextArea\n            label=\"Description\"\n            name=\"petDesc\"\n            placeholder=\"Small description about the pet\"\n            onChange={handleChange}\n          />\n\n        <Form.Field>\n          <label>Date last seen:</label>\n          <Datepicker\n          name=\"petDateLF\"\n          onChange={handleChange} />\n        </Form.Field>\n\n\n          <Form.Field>\n            <Form.Input \n            fluid label=\"Address where the pet was last seen\" \n            placeholder=\"Name\" \n            name=\"location\" \n            onChange={handleChange}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <Form.Input \n            fluid label=\"Reward (Optional)\" \n            placeholder=\"Reward\" \n            name=\"petReward\" \n            onChange={handleChange}/>\n          </Form.Field>\n\n\n          <Button id=\"submitButton\" onSubmit={handleFormSubmit} >Submit</Button>\n        </Form>\n      </Grid.Column>\n    </Grid>\n    <Divider vertical></Divider>\n  </Segment>\n  </Container>\n  )};\n\nexport default AddPetForm; ","/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/pages/IndividualPlacard.js",["102","103"],"/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/header/index.js",[],"/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/footer/index.js",[],"/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/utils/mutations.js",[],"/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/utils/auth.js",[],"/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/Checkout/index.js",[],"/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/FilterForm/index.js",[],"/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/PetPlacard/index.js",[],"/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/CommentSection/index.js",[],"/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/MapComponent/index.js",[],"/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/EmailModal/index.js",[],"/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/EmailForm/index.js",[],"/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/IndividualComment/index.js",[],"/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/components/DatePicker/index.js",[],"/Users/Mario/Bootcamp2020-2021/Pet-Finder-Assistant/client/src/utils/queries.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":4,"column":50,"nodeType":"110","messageId":"111","endLine":4,"endColumn":55},{"ruleId":"108","severity":1,"message":"112","line":11,"column":18,"nodeType":"110","messageId":"111","endLine":11,"endColumn":23},{"ruleId":"108","severity":1,"message":"113","line":11,"column":25,"nodeType":"110","messageId":"111","endLine":11,"endColumn":29},{"ruleId":"108","severity":1,"message":"114","line":12,"column":20,"nodeType":"110","messageId":"111","endLine":12,"endColumn":26},{"ruleId":"108","severity":1,"message":"115","line":12,"column":28,"nodeType":"110","messageId":"111","endLine":12,"endColumn":33},{"ruleId":"108","severity":1,"message":"116","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":12},{"ruleId":"108","severity":1,"message":"117","line":41,"column":10,"nodeType":"110","messageId":"111","endLine":41,"endColumn":19},{"ruleId":"108","severity":1,"message":"118","line":20,"column":10,"nodeType":"110","messageId":"111","endLine":20,"endColumn":19},{"ruleId":"108","severity":1,"message":"119","line":31,"column":9,"nodeType":"110","messageId":"111","endLine":31,"endColumn":16},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'data' is assigned a value but never used.","'error1' is assigned a value but never used.","'data1' is assigned a value but never used.","'Auth' is defined but never used.","'validated' is assigned a value but never used.","'useParams' is defined but never used.","'petName' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]

